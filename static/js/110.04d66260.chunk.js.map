{"version":3,"file":"static/js/110.04d66260.chunk.js","mappings":"uQAAA,IAAMA,EACM,kDADNA,EAEU,4CAFVA,EAGW,sCAGXC,EAAU,CACdC,OAAQ,MACNC,QAAS,CACTC,OAAQ,mBACRC,cACE,+NAIOC,EAAsB,WACjC,OAAOC,MAAM,GAAD,OAAIP,GAAiBC,GAASO,MAAK,SAAAC,GAC7C,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,GACF,EAEYC,EAA0B,SAAAC,GACrC,OAAOR,MAAM,GAAD,OAAIP,EAAJ,kBAA+Be,GAAUd,GAASO,MAC5D,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,GAEJ,EAEYG,EAAiB,SAAAC,GAC5B,OAAOV,MAAM,GAAD,OAAIP,GAAJ,OAAyBiB,GAAMhB,GAASO,MAAK,SAAAC,GACvD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,GACF,EAEYK,EAAmB,SAAAD,GAC9B,OAAOV,MAAM,GAAD,OAAIP,GAAJ,OAAyBiB,EAAzB,YAAuChB,GAASO,MAAK,SAAAC,GAC/D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,GACF,EAEYM,EAAsB,SAAAF,GACjC,OAAOV,MAAM,GAAD,OAAIP,GAAJ,OAAyBiB,EAAzB,YAAuChB,GAASO,MAAK,SAAAC,GAC/D,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,GACF,C,6JC9DYO,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MAEf,OACE,yBACGF,EAAOG,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAMR,IAAMU,MAAO,CAAEC,KAAMN,GAAxC,SAAsDG,EAAMI,SADrDJ,EAAMR,GADL,KAQjB,E,2BCbYa,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+FCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEC,OAAOJ,MAAzB,MAIjB,EC6BD,EApCe,WAAO,IAAD,EACjB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAE5CC,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAS,mCAAG,8GAESnC,EAAAA,EAAAA,IAAwBgC,GAFjC,OAERrC,EAFQ,OAGZiC,EAAUjC,EAASyC,SAHP,gDAKdC,QAAQC,MAAM,yBAAd,MALc,yDAAH,qDASfH,GACD,GAAE,CAACH,IAEF,IAAMO,EAAgBhC,EAAOiC,QAAO,SAAC7B,GAAD,OACpCA,EAAMI,MAAM0B,cAAcC,SAASV,EAAUS,cADT,IASpC,OACA,6BACE,SAACpB,EAAD,CAAWC,MAAOU,EAAWT,SAPL,SAACoB,GAE3BZ,EAD4B,KAATY,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE5C,KAKC,SAACrC,EAAD,CAAWC,OAAQgC,MAIxB,C","sources":["Api.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/pages/Movies/Movies.jsx"],"sourcesContent":["const URLS = {\n  TRENDING: 'https://api.themoviedb.org/3/trending/movie/day',\n  SEARCH_MOVIE: 'https://api.themoviedb.org/3/search/movie',\n  MOVIE_DETAILS: 'https://api.themoviedb.org/3/movie/',\n};\n\nconst OPTIONS = {\n  method: 'GET',\n    headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmOTEwMzFmNzM4YjFlZTNlZmFlY2I5OTE4NzA5Njg4NSIsInN1YiI6IjY0ODk5NzRhZDJiMjA5MDBjYTIyMDE3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9gZmXimMFGNWQXFisDTG4ywfRuOX6Zk8W6SpiteXFXo',\n  },\n};\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${URLS.TRENDING}`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    //     console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchMovieBySearchQuery = search => {\n  return fetch(`${URLS.SEARCH_MOVIE}?query=${search}`, OPTIONS).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      //     console.log(response);\n      return response.json();\n    }\n  );\n};\n\nexport const fetchMovieById = id => {\n  return fetch(`${URLS.MOVIE_DETAILS}${id}`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchCastOfMovie = id => {\n  return fetch(`${URLS.MOVIE_DETAILS}${id}/credits`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchReviewsOfMovie = id => {\n  return fetch(`${URLS.MOVIE_DETAILS}${id}/reviews`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};","import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const MovieList = ({ movies }) => {\nconst location = useLocation();\n\n  return (\n    <div>\n      {movies.map((movie) => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }} >{movie.title}\n          </Link>\n        </li>\n      ))}\n    </div>\n  );\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;","import { Wrapper, Input, Icon } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieBySearchQuery } from \"Api\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get(\"name\") ?? \"\";\n\n    useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchMovieBySearchQuery(movieName);\n          setMovies(response.results);\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n      }\n    };\n\n    fetchData();\n  }, [movieName]);\n\n    const visibleMovies = movies.filter((movie) =>\n    movie.title.toLowerCase().includes(movieName.toLowerCase())\n    );\n    \n    const updateQueryString = (name) => {\n    const nextParams = name !== \"\" ? { name } : {};\n    setSearchParams(nextParams);\n    };\n    \n    return (\n    <main>\n      <SearchBox value={movieName} onChange={updateQueryString} />\n      <MovieList movies={visibleMovies} />\n    </main>\n  );\n\n};\n \nexport default Movies;"],"names":["URLS","OPTIONS","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","response","ok","Error","status","json","fetchMovieBySearchQuery","search","fetchMovieById","id","fetchCastOfMovie","fetchReviewsOfMovie","MovieList","movies","location","useLocation","map","movie","to","state","from","title","Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchData","results","console","error","visibleMovies","filter","toLowerCase","includes","name"],"sourceRoot":""}