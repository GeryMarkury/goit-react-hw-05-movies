{"version":3,"file":"static/js/41.42738cd3.chunk.js","mappings":"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","sources":["Api.js","components/pages/MovieDetails/MovieDetail.styled.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const URLS = {\n  TRENDING: 'https://api.themoviedb.org/3/trending/movie/day',\n  SEARCH_MOVIE: 'https://api.themoviedb.org/3/search/movie',\n  MOVIE_DETAILS: 'https://api.themoviedb.org/3/movie/',\n};\n\nconst OPTIONS = {\n  method: 'GET',\n    headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmOTEwMzFmNzM4YjFlZTNlZmFlY2I5OTE4NzA5Njg4NSIsInN1YiI6IjY0ODk5NzRhZDJiMjA5MDBjYTIyMDE3ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9gZmXimMFGNWQXFisDTG4ywfRuOX6Zk8W6SpiteXFXo',\n  },\n};\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${URLS.TRENDING}`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    //     console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchMovieBySearchQuery = search => {\n  return fetch(`${URLS.SEARCH_MOVIE}?query=${search}`, OPTIONS).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      //     console.log(response);\n      return response.json();\n    }\n  );\n};\n\nexport const fetchMovieById = id => {\n  return fetch(`${URLS.MOVIE_DETAILS}${id}`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchCastOfMovie = id => {\n  return fetch(`${URLS.MOVIE_DETAILS}${id}/credits`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};\n\nexport const fetchReviewsOfMovie = id => {\n  return fetch(`${URLS.MOVIE_DETAILS}${id}/reviews`, OPTIONS).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    // console.log(response);\n    return response.json();\n  });\n};","import styled from \"styled-components\";\n\nexport const MovieContainer = styled.div`\ndisplay: flex;\ngap: 30px;  \nmax-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Image = styled.img`\nwidth: 400px;\n`;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\";\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef, Suspense } from \"react\";\nimport { fetchMovieById } from \"Api\";\nimport defaultPoster from '../../../images/defaultMoviePoster.jpg';\nimport { MovieContainer, Image } from \"./MovieDetail.styled\";\nimport { BackLink } from \"components/BackLink/BackLink\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? \"/movies\");\n  \n  const BASE_URL = 'https://image.tmdb.org/t/p/';\n  const IMG_SIZE = 'w400';\n\n  const genres = movie.genres ? movie.genres.map(genre => genre.name).join(\", \") : \"\";\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n    \n  return (<>\n    <BackLink to={backLinkHref.current}>Go back</BackLink>\n    <MovieContainer>\n      <div><Image src={movie.poster_path ? `${BASE_URL}${IMG_SIZE}${movie.poster_path}` : defaultPoster} alt={movie.title} /></div>\n    <div><h2>{movie.title}</h2>\n    <p>User score: {movie.vote_average}</p>\n    <h3>Overview</h3>\n    <p>{movie.overview}</p>\n    <h4>Genres</h4>\n    <p>{genres}</p></div></MovieContainer>\n    <p>Additional information</p>\n    <ul>\n      <li><Link to=\"cast\">Cast</Link></li>\n      <li>\n        <Link to=\"reviews\">Reviews</Link>\n      </li>\n    </ul>\n    <Suspense fallback={<div>Loading subpage...</div>}><Outlet /></Suspense>\n  </>)\n};\n\nexport default MovieDetails;"],"names":["URLS","OPTIONS","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","response","ok","Error","status","json","fetchMovieBySearchQuery","search","fetchMovieById","id","fetchCastOfMovie","fetchReviewsOfMovie","MovieContainer","styled","Image","StyledLink","Link","BackLink","to","children","size","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","genres","map","genre","name","join","useEffect","fetchData","console","error","current","src","poster_path","defaultPoster","alt","title","vote_average","overview","Suspense","fallback"],"sourceRoot":""}